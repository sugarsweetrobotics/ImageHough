ImageHoughName - English
========================

.. toctree::
   :hidden:

   index_j


Introduction
============


For a full list of classes and functions, see the `API documentation`_.

.. _`API Documentation`:
   doxygen/html/index.html

Requirements
============

ImageHough uses the `CMake build system`. You will need at least version
2.8 to be able to build the component.

.. _`CMAke build system`:
   http://www.cmake.org


Installation
============

Binary
------

Users of Windows can install the component using the binary installer. This
will install the component and all its necessary dependencies. It is the
recommended method of installation in Windows.

- Download the installer from the website.
- Double-click the executable file to begin installation.
- Follow the instructions to install the component.
- You may need to restart your computer for environment variable changes
  to take effect before using the component.

The component can be launched by double-clicking the
``ImageHoughComp`` executable. The ``ImageHough`` library
is available for loading into a manager, using the initialisation function
``ImageHoughInit``.

From source
-----------

Follow these steps to install ImageHough from source in any operating
system:

- Download the source, either from the repository or a source archive,
  and extract it somewhere::

    tar -xvzf ImageHough-1.0.0.tar.gz

- Change to the directory containing the extracted source::

    cd ImageHough-1.0.0

- Create a directory called ``build``::

    mkdir build

- Change to that directory::

    cd build

- Run cmake or cmake-gui::

    cmake ../

- If no errors occurred, run make::

    make

- Finally, install the component. Ensure the necessary permissions to
  install into the chosen prefix are available::

    make install

- The install destination can be changed by executing ccmake and changing
  the variable ``CMAKE_INSTALL_PREFIX``::

    ccmake ../

The component is now ready for use. See the next section for instructions on
configuring the component.

ImageHough can be launched in stand-alone mode by executing the
``ImageHoughComp`` executable (installed into ``${prefix}/components/bin``).
Alternatively, ``libImageHough.so`` can be loaded into a manager, using the
initialisation function ``ImageHoughInit``. This shared object can be found in
``${prefix}/components/lib`` or ``${prefix}/components/lib64``.


Configuration
=============

The available configuration parameters are described below:

================ ================== ================ ======
Parameter        Data type          Default Value    Effect
================ ================== ================ ======
mode             string             standard         
rho              double             1.0              Distance resolution of the accumulator in pixels
theta            double             180              Angle resolution of the accumulator in radians
threshold        double             100              The accumulator threshold parameter. Only those lines are returned that get enough votes ( >\texttt{threshold} )
srn              double             0                For the multi-scale Hough transform it is the divisor for the distance resolution rho .The coarse accumulator distance resolution will be rho and the accurate accumulator resolution will be rho/srn . If both srn=0 and stn=0 then the classical Hough transform is used, otherwise both these parameters should be positive.
stn              double             0                For the multi-scale Hough transform it is the divisor for the distance resolution theta
================ ================== ================ ======

Ports
=====

The ports provided by the component are described below:

=============== =========== ============================== =======
Name            Type        Data type                      Purpose
=============== =========== ============================== =======
in              InPort      Img::TimedCameraImage          
out             OutPort     Img::TimedCameraImage          
lines           OutPort     RTC::TimedDoubleSeq            Lines Point Data<br/>format :  Line k is defined by two points : (xk0, yk0) to (xk1, yk1) <br/>(if two lines, )<br/>[x00, y00, x01, y01, x10, y10, x11, y11]
=============== =========== ============================== =======

Examples
========

An example configuration file is provided in the
``${prefix}/components/share/ImageHough/examples/conf/`` directory.

Changelog
=========



License
=======

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

